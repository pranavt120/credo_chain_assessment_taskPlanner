package com.taskplaner.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.apache.catalina.connector.Response;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.taskplaner.dao.TaskDao;
import com.taskplaner.entities.TaskEntity;
import com.taskplaner.service.TasksServiceImpl;

@RestController
@RequestMapping("/task")
public class TaskController {
	
	@Autowired
	ModelMapper mapper;
	
	@Autowired
	TasksServiceImpl service;
	
	@PostMapping("/create")
	ResponseEntity<TaskDao> createTask(@RequestBody TaskDao task){
		TaskEntity taskEntity = mapper.map(task, TaskEntity.class);
		
		 taskEntity = service.createTask(taskEntity);
		 
		 return new ResponseEntity<>(mapper.map(taskEntity, TaskDao.class), HttpStatus.OK);
	}
	
	
	@GetMapping("/search/{id}")
	ResponseEntity<?> searchTaskId(@PathVariable String id){
		
		TaskEntity task = service.searchTaskId(id);
		
		if(task != null) {
			return new ResponseEntity<TaskDao>(mapper.map(task, TaskDao.class), HttpStatus.OK);
		}
		
		return new ResponseEntity<String>("Not found", HttpStatus.OK );
	}
	
	@GetMapping("/search/{name}")
	ResponseEntity<?> searchTaskName(@PathVariable String name){
		List<TaskEntity> titles = service.searchTaskName(name);
		
		List<TaskDao> titlesDao = new ArrayList<>();
		titlesDao = titles.stream().map(x-> mapper.map(x, TaskDao.class)).collect(Collectors.toList());
		if(titlesDao.size() > 0) {
			return new ResponseEntity<List<TaskDao>>(titlesDao, HttpStatus.OK);
		}
		
		return new ResponseEntity<String>("Not found", HttpStatus.OK );
	}

}
